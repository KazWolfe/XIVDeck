name: Build XIVDeck

on:
  release:
    types: [published]
    
jobs:
  build-ffxivplugin:
    name: Build XIVDeck FFXIV Plugin
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.100
      - name: Restore Dependencies
        run: dotnet restore
      - name: Download Dalamud
        run: |
          Invoke-WebRequest -Uri https://goatcorp.github.io/dalamud-distrib/latest.zip -OutFile latest.zip
          Expand-Archive -Force latest.zip "$env:AppData\XIVLauncher\addon\Hooks\dev"
      - name: Build Plugin
        run: |
          $ver = '${{ github.ref }}' -replace 'refs/tags/v',''
          invoke-expression 'dotnet build --no-restore --configuration Release --nologo -p:AssemblyVersion=$ver -p:Version=$ver -p:FileVersion=$ver FFXIVPlugin'
      - name: Report Build Hash
        run: |
          $fileHashInfo = Get-FileHash .\FFXIVPlugin\bin\Release\XIVDeck.FFXIVPlugin\latest.zip;
          Write-Output "Hash of XIVDeck.FFXIVPlugin: $($fileHashInfo.Hash)";
      - name: Upload Arifact to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: .\FFXIVPlugin\bin\Release\XIVDeck.FFXIVPlugin\latest.zip
          asset_name: XIVDeck.FFXIVPlugin.zip
          asset_content_type: application/zip

  build-sdplugin:
    name: Build XIVDeck Stream Deck Plugin
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - name: Download Stream Deck Distribution Tool
        run: |
          Invoke-WebRequest -Uri https://developer.elgato.com/documentation/stream-deck/distributiontool/DistributionToolWindows.zip -OutFile packager.zip
          Expand-Archive -Force packager.zip "$env:TEMP\elgato-distrib"
      - name: Move Files to Expected Structure
        run: |
          New-Item -ItemType "directory" "dist\dev.wolf.xivdeck.sdPlugin"
          Copy-Item "SDPlugin\*" -Destination "dist\dev.wolf.xivdeck.sdPlugin" -Recurse
      - name: Run Distribution Bundler
        run: |
          Invoke-Expression "$env:TEMP\elgato-distrib\DistributionTool.exe -b -i dist\dev.wolf.xivdeck.sdPlugin -o dist"
      - name: Report Build Hash
        run: |
          $fileHashInfo = Get-FileHash dist\dev.wolf.xivdeck.streamDeckPlugin;
          Write-Output "Hash of the Stream Deck Plugin: $($fileHashInfo.Hash)";
      - name: Upload Arifact to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: .\dist\dev.wolf.xivdeck.streamDeckPlugin
          asset_name: XIVDeck.streamDeckPlugin
          asset_content_type: application/zip
          